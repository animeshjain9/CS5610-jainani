<h3>Angular Experiments</h3>

<p>

</p>

<p>
    The magic of Routing is taken care by a service provider that Angular provides out of the box called $routeProvider. An Angular service is a singleton object created by a service factory. These service factories are functions which, in turn, are created by a service provider. The service providers are constructor functions. When instantiated they must contain a property called $get, which holds the service factory function.<br/>

    When we use AngularJS’s dependency injection and inject a service object in our Controller, Angular uses $injector to find corresponding service injector. Once it get a hold on service injector, it uses $get method of it to get an instance of service object. Sometime the service provider needs certain info in order to instantiate service object.<br/>

    Application routes in Angular are declared via the $routeProvider, which is the provider of the $route service. This service makes it easy to wire together controllers, view templates, and the current URL location in the browser. Using this feature we can implement deep linking, which lets us utilize the browser’s history (back and forward navigation) and bookmarks<br/>
    I have also worked on the some AngularJS Routing and Services experiments about the responsive designing of web pages which includes :<br />
    1.AngularJS Routing I<br />
    2.AngularJS Routing II<br />
    3.AngularJS Services I<br />
    4.AngularJS Services II<br />
    5.AngularJS Nested Controllers<br />
</p>